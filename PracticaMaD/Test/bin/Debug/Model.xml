<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Model</name>
    </assembly>
    <members>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.CategoryDaoEntityFramework">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.GenericDaoEntityFramework`2"/>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.ICategoryDao" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.CategoryDaoEntityFramework.#ctor">
            <summary>
            Public Constructor
            </summary>
            
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.CategoryDaoEntityFramework.FindByCategoryName(System.String)">
            <summary>
            Finds a category by his name
            </summary>
            <param categoryName="name">The category name</param>
            <returns>The category</returns>
            
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.ICategoryDao">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.IGenericDao`2" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryDao.ICategoryDao.FindByCategoryName(System.String)">
            <summary>
            Find a category by his name
            </summary>
            <param categoryName="name">The category name</param>
            <returns></returns>
            
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService"/> class.
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.categoryDao">
            <summary>
            Sets the category DAO.
            </summary>
            <value>
            The category DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.CategoryDao">
            <summary>
            Sets the category DAO.
            </summary>
            <value>
            The category DAO.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.AddCategory(System.String)">
            <summary>Adds a Category</summary>
            <param name="categoryName">The category name</param>
            <returns>The categoryId</returns>
            <exception cref="T:System.Exception">El nombre de la categoría no puede estar vacío</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.FindCategory(System.Int64)">
            <summary>Find a category by its id</summary>
            <param name="categoryId">The categoryId</param>
            <returns>The category</returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException">FindCategory</exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.CategoryService.GetAllCategories">
            <summary>Finds a list of categories</summary>
            <returns>The list of categories</returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException">Found 0 Categories</exception>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService.CategoryDao">
            <summary>
            Sets the category DAO.
            </summary>
            <value>
            The category DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService.AddCategory(System.String)">
            <summary>
            Adds a Category
            </summary>
            <param name="categoryName">The category name</param>
            <returns>The categoryId</returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService.FindCategory(System.Int64)">
            <summary>
            Find a category by its id
            </summary>
            <param name="categoryId">The categoryId</param>
            <returns>The category</returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CategoryService.ICategoryService.GetAllCategories">
            <summary>
            Finds a list of categories
            </summary>
            <returns>The list of categories</returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.GenericDaoEntityFramework`2" />
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework"/> class.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindById(System.Int64)">
            <summary>Finds the by identifier.</summary>
            <param name="commId">The comm identifier.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindByEventIdAndUserId(System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by event identifier and user identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindByEventId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindByDateRangeAndUserId(System.Int64,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>Finds the by date range and user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.CommentTableDaoEntityFramework.FindByDateRangeAndEventId(System.Int64,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>Finds the by date range and event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.IGenericDao`2" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindById(System.Int64)">
            <summary>Finds the by identifier.</summary>
            <param name="commId">The comm identifier.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindByEventIdAndUserId(System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by event identifier and user identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindByEventId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the by user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindByDateRangeAndUserId(System.Int64,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>Finds the by date range and user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableDao.ICommentTableDao.FindByDateRangeAndEventId(System.Int64,System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>Finds the by date range and event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService"/> class.
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.CommentTableDao">
            <summary>
            Sets the comment table DAO.
            </summary>
            <value>
            The comment table DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.EventDao">
            <summary>
            Sets the event DAO.
            </summary>
            <value>
            The event DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.AddComment(System.Int64,System.Int64,System.String)">
            <summary>
              <br />
            </summary>
            <param name="eventId"></param>
            <param name="userId"></param>
            <param name="body"></param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:System.Exception">El cuerpo del comentario no puede estar vacío</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.FindEventComments(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the event comments.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.DeleteComment(System.Int64,System.Int64)">
            <summary>
              <br />
            </summary>
            <param name="commentId"></param>
            <param name="userId"></param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:System.Exception">No eres el dueño del comentario</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.UpdateComment(System.Int64,System.Int64,System.String)">
            <summary>
              <br />
            </summary>
            <param name="commentId"></param>
            <param name="userId"></param>
            <param name="body"></param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:System.Exception">No eres el dueño del comentario</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.CommentTableService.FindComment(System.Int64)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="commId">The comm identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException">
            <summary>
            
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException"/> class.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException"/> class.
            </summary>
            <param name="message">Mensaje que describe el error.</param>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.Exceptions.UserNotAuthenticatedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.CommentTableDao">
            <summary>
            Sets the comment table DAO.
            </summary>
            <value>
            The comment table DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.AddComment(System.Int64,System.Int64,System.String)">
            <summary>Adds the comment.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="body">The body.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.UpdateComment(System.Int64,System.Int64,System.String)">
            <summary>Updates the comment.</summary>
            <param name="commentId">The comment identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="body">The body.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.DeleteComment(System.Int64,System.Int64)">
            <summary>Deletes the comment.</summary>
            <param name="commentId">The comment identifier.</param>
            <param name="userId">The user identifier.</param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.FindEventComments(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the event comments.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.CommentTableService.ICommentTableService.FindComment(System.Int64)">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="commId">The comm identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.eventId">
            <summary>
            Gets or sets the event identifier.
            </summary>
            <value>
            The event identifier.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.eventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>
            The name of the event.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.eventDescription">
            <summary>
            Gets or sets the event description.
            </summary>
            <value>
            The event description.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.eventDate">
            <summary>
            Gets or sets the event date.
            </summary>
            <value>
            The event date.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.categoryName">
            <summary>
            Gets or sets the name of the category.
            </summary>
            <value>
            The name of the category.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.hasComments">
            <summary>
            Gets or sets a value indicating whether this instance has comments.
            </summary>
            <value>
              <c>true</c> if this instance has comments; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName.#ctor(System.Int64,System.String,System.String,System.DateTime,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName"/> class.
            </summary>
            <param name="eventId">The event identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="eventDescription">The event description.</param>
            <param name="eventDate">The event date.</param>
            <param name="categoryName">Name of the category.</param>
            <param name="hasComments">if set to <c>true</c> [has comments].</param>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.GenericDaoEntityFramework`2" />
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventDao.IEventDao" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework"/> class.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework.FindAllEvents(System.Int32,System.Int32)">
            <summary>Finds all events.</summary>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework.FindByEventId(System.Int64)">
            <summary>
            Finds an event by eventId
            </summary>
            <param name="eventId">eventId</param>
            <returns>The Event</returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventDaoEntityFramework.FindEventsByCategory(System.String,System.Int64,System.Int32,System.Int32)">
            <summary>Finds the events by category.</summary>
            <param name="name">The name.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.IEventDao.FindAllEvents(System.Int32,System.Int32)">
            <summary>Finds all events.</summary>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.IEventDao.FindByEventId(System.Int64)">
            <summary>Finds the by event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventDao.IEventDao.FindEventsByCategory(System.String,System.Int64,System.Int32,System.Int32)">
            <summary>Finds the events by category.</summary>
            <param name="name">The name.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService" />
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService.EventDao">
            <summary>
            Sets the event DAO.
            </summary>
            <value>
            The event DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService.FindEvents(System.String,System.Nullable{System.Int64},System.Int32,System.Int32)">
            <summary>Finds the events.</summary>
            <param name="keywords">The keywords.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService.addEvent(System.Int64,System.String,System.DateTime,System.Int64,System.String)">
            <summary>Adds the event.</summary>
            <param name="userId">The user identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="envetDate">The envet date.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="reseña">The reseña.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventService.FindByEventId(System.Int64)">
            <summary>
            Finds the events by category.
            <param name="eventId">The eventId.</param>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist.events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist.exist">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist"/> is exist.
            </summary>
            <value>
              <c>true</c> if exist; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist.#ctor(System.Collections.Generic.List{Es.Udc.DotNet.PracticaMaD.Model.EventDao.EventWithCatName},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.EventWithExist"/> class.
            </summary>
            <param name="events">The events.</param>
            <param name="exist">if set to <c>true</c> [exist].</param>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService.EventDao">
            <summary>
            Sets the event DAO.
            </summary>
            <value>
            The event DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService.addEvent(System.Int64,System.String,System.DateTime,System.Int64,System.String)">
            <summary>Adds the event.</summary>
            <param name="userId">The user identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="envetDate">The envet date.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="reseña">The reseña.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService.FindEvents(System.String,System.Nullable{System.Int64},System.Int32,System.Int32)">
            <summary>Finds the events.</summary>
            <param name="keywords">The keywords.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.EventService.IEventService.FindByEventId(System.Int64)">
            <summary>Finds the events by category.
            <param name="eventId">The eventId.</param>
            </summary>S
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.GroupDaoEntityFramework.FindAllGroups(System.Int32,System.Int32)">
            <summary>Finds all groups.</summary>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.GroupDaoEntityFramework.IsUserMemberOfGroup(System.Int64,System.Int64)">
            <summary>Determines whether [is user member of group] [the specified user identifier].</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <returns>
              <c>true</c> if [is user member of group] [the specified user identifier]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.GroupDaoEntityFramework.FindGroupsByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>
            Finds the groups by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.IGroupDao.FindAllGroups(System.Int32,System.Int32)">
            <summary>
            Finds all groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.IGroupDao.FindGroupsByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>
            Finds the groups by user identifier.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupDao.IGroupDao.IsUserMemberOfGroup(System.Int64,System.Int64)">
            <summary>Determines whether [is user member of group] [the specified user identifier].</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <returns>
              <c>true</c> if [is user member of group] [the specified user identifier]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService" />
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.GroupDao">
            <summary>
            Sets the group DAO.
            </summary>
            <value>
            The group DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.CreateGroup(System.String,System.String,System.Int64,System.Int64)">
            <summary>Creates the group.</summary>
            <param name="groupName">Name of the group.</param>
            <param name="body">The body.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="userId">The user identifier.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.JoinGroup(System.Int64,System.Int64)">
            <summary>Joins the group.</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException">El usuario no está en el grupo.</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.LeaveGroup(System.Int64,System.Int64)">
            <summary>Leaves the group.</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException">El usuario no está en el grupo.</exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.GetAllGroups(System.Int32,System.Int32)">
            <summary>Gets all groups.</summary>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.GetUserGroups(System.Int64,System.Int32,System.Int32)">
            <summary>
            Gets the user groups.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupService.IsUserMemberOfGroup(System.Int64,System.Int64)">
            <summary>
            Determines whether [is user member of group] [the specified user identifier].
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <returns>
              <c>true</c> if [is user member of group] [the specified user identifier]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers.groupId">
            <summary>
            Gets the group identifier.
            </summary>
            <value>
            The group identifier.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers.groupName">
            <summary>
            Gets the name of the group.
            </summary>
            <value>
            The name of the group.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers.numberOfMembers">
            <summary>
            Gets the number of members.
            </summary>
            <value>
            The number of members.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers.numRecommendations">
            <summary>
            Gets the number recommendations.
            </summary>
            <value>
            The number recommendations.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers.#ctor(System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.GroupService.GroupWithNumberOfMembers"/> class.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="groupName">Name of the group.</param>
            <param name="numberOfMembers">The number of members.</param>
            <param name="numRecommendations">The number recommendations.</param>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.GroupDao">
            <summary>
            Sets the group DAO.
            </summary>
            <value>
            The group DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.CreateGroup(System.String,System.String,System.Int64,System.Int64)">
            <summary>Creates the group.</summary>
            <param name="groupName">Name of the group.</param>
            <param name="body">The body.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="userId">The user identifier.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.JoinGroup(System.Int64,System.Int64)">
            <summary>Joins the group.</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.LeaveGroup(System.Int64,System.Int64)">
            <summary>Leaves the group.</summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.GetAllGroups(System.Int32,System.Int32)">
            <summary>
            Gets all groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.GetUserGroups(System.Int64,System.Int32,System.Int32)">
            <summary>
            Gets the user groups.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.GroupService.IGroupService.IsUserMemberOfGroup(System.Int64,System.Int64)">
            <summary>
            Determines whether [is user member of group] [the specified user identifier].
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="groupId">The group identifier.</param>
            <returns>
              <c>true</c> if [is user member of group] [the specified user identifier]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.IRecommendationDao.FindRecommendationsByGroupId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations by group identifier.</summary>
            <param name="groupId">The group identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.IRecommendationDao.FindRecommendationByEventId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendation by event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.IRecommendationDao.FindRecommendationsByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations by user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.GenericDaoEntityFramework`2" />
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.IRecommendationDao" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework"/> class.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework.FindRecommendationsByGroupId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations by group identifier.</summary>
            <param name="groupId">The group identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework.FindRecommendationByEventId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendation by event identifier.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationDao.RecommendationDaoEntityFramework.FindRecommendationsByUserId(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations by user identifier.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startindex">The startindex.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.IRecommendationService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.IRecommendationService.RecommendationDao">
            <summary>
            Sets the recommendation DAO.
            </summary>
            <value>
            The recommendation DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.IRecommendationService.RecommendEventToGroup(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>Recommends the event to group.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="groupId">The group identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="justification">The justification.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.IRecommendationService.FindRecommendations(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecBlock.recommendations">
            <summary>
            Gets the recommendations.
            </summary>
            <value>
            The recommendations.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecBlock.existsMore">
            <summary>
            Gets a value indicating whether [exists more].
            </summary>
            <value>
              <c>true</c> if [exists more]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecBlock.#ctor(System.Collections.Generic.List{Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecBlock"/> class.
            </summary>
            <param name="recomendations">The recomendations.</param>
            <param name="existMoreRecomendations">if set to <c>true</c> [exist more recomendations].</param>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.date">
            <summary>
            Gets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.groupId">
            <summary>
            Gets the group identifier.
            </summary>
            <value>
            The group identifier.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.groupName">
            <summary>
            Gets the name of the group.
            </summary>
            <value>
            The name of the group.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.eventId">
            <summary>
            Gets the event identifier.
            </summary>
            <value>
            The event identifier.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.eventName">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            The name of the event.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.text">
            <summary>
            Gets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.hasComments">
            <summary>
            Gets a value indicating whether this instance has comments.
            </summary>
            <value>
              <c>true</c> if this instance has comments; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData.#ctor(System.Int64,System.DateTime,System.Int64,System.String,System.String,System.Int64,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecData"/> class.
            </summary>
            <param name="rId">The r identifier.</param>
            <param name="date">The date.</param>
            <param name="groupId">The group identifier.</param>
            <param name="groupName">Name of the group.</param>
            <param name="desc">The desc.</param>
            <param name="eventId">The event identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="ec">if set to <c>true</c> [ec].</param>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.IRecommendationService" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService"/> class.
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.GroupDao">
            <summary>
            Sets the group DAO.
            </summary>
            <value>
            The group DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.EventDao">
            <summary>
            Sets the event DAO.
            </summary>
            <value>
            The event DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.RecommendationDao">
            <summary>
            Sets the recommendation DAO.
            </summary>
            <value>
            The recommendation DAO.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.FindRecommendations(System.Int64,System.Int32,System.Int32)">
            <summary>Finds the recommendations.</summary>
            <param name="userId">The user identifier.</param>
            <param name="startIndex">The start index.</param>
            <param name="count">The count.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.RecommendationService.RecommendationService.RecommendEventToGroup(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>Recommends the event to group.</summary>
            <param name="eventId">The event identifier.</param>
            <param name="groupId">The group identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="justification">The justification.</param>
            <returns>
              <br />
            </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.IUserProfileDao">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.IGenericDao`2" />
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserProfile">
            </seealso>
             />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.IUserProfileDao.FindByLoginName(System.String)">
            <summary>
            Finds a UserProfile by loginName
            </summary>
            <param name="loginName">loginName</param>
            <returns>The UserProfile</returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.UserProfileDaoEntityFramework">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.ModelUtil.Dao.GenericDaoEntityFramework`2" />
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.IUserProfileDao" />
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.UserProfileDaoEntityFramework.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserProfileDao.UserProfileDaoEntityFramework.FindByLoginName(System.String)">
            <summary>
            Finds a UserProfile by his loginName
            </summary>
            <param name="loginName"></param>
            <returns></returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"></exception>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException">
            <summary>
            Public <c>ModelException</c> which captures the error 
            with the passwords of the users.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException"/> class.
            </summary>
            <param name="loginName"><c>loginName</c> that causes the error.</param>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException.LoginName">
            <summary>
            Stores the User login name of the exception
            </summary>
            <value>The name of the login.</value>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.ChangePassword(System.Int64,System.String,System.String)">
            <summary>
            Changes the password.
            </summary>
            <param name="userProfileId"> The user profile id. </param>
            <param name="oldClearPassword"> The old clear password. </param>
            <param name="newClearPassword"> The new clear password. </param>
            <exception cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException"/>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.FindUserProfileDetails(System.Int64)">
            <summary>
            Finds the user profile details.
            </summary>
            <param name="userProfileId"> The user profile id. </param>
            <returns> The user profile details </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.Login(System.String,System.String,System.Boolean)">
            <summary>
            Logins the specified login name.
            </summary>
            <param name="loginName"> Name of the login. </param>
            <param name="password"> The password. </param>
            <param name="passwordIsEncrypted"> if set to <c> true </c> [password is encrypted]. </param>
            <returns> LoginResult </returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
            <exception cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.RegisterUser(System.String,System.String,Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails)">
            <summary>
            Registers a new user.
            </summary>
            <param name="loginName"> Name of the login. </param>
            <param name="clearPassword"> The clear password. </param>
            <param name="userProfileDetails"> The user profile details. </param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.DuplicateInstanceException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.UpdateUserProfileDetails(System.Int64,Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails)">
            <summary>
            Updates the user profile details.
            </summary>
            <param name="userProfileId"> The user profile id. </param>
            <param name="userProfileDetails"> The user profile details. </param>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.InstanceNotFoundException"/>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService.UserExists(System.String)">
            <summary>
            Checks if the specified loginName corresponds to a valid user.
            </summary>
            <param name="loginName"> User loginName. </param>
            <returns> Boolean to indicate if the loginName exists </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult">
            <summary>
            A Custom VO which keeps the results for a login action.
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.#ctor(System.Int64,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult"/> class.
            </summary>
            <param name="userProfileId">The user profile id.</param>
            <param name="firstName">Users's first name.</param>
            <param name="encryptedPassword">The encrypted password.</param>
            <param name="language">The language.</param>
            <param name="country">The country.</param>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.Country">
            <summary>
            Gets the country code.
            </summary>
            <value>The country code.</value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.EncryptedPassword">
            <summary>
            Gets the encrypted password.
            </summary>
            <value>The <c>encryptedPassword.</c></value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.FirstName">
            <summary>
            Gets the first name.
            </summary>
            <value>The <c>firstName</c></value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.Language">
            <summary>
            Gets the language code.
            </summary>
            <value>The language code.</value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.UserProfileId">
            <summary>
            Gets the user profile id.
            </summary>
            <value>The user profile id.</value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.LoginResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the
            current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current
            <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails">
            <summary>
            VO Class which contains the user details
            </summary>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.FirstName">
            <summary>
            Gets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.Lastname">
            <summary>
            Gets the lastname.
            </summary>
            <value>
            The lastname.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.Email">
            <summary>
            Gets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.Language">
            <summary>
            Gets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.Country">
            <summary>
            Gets the country.
            </summary>
            <value>
            The country.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails"/>
            class.
            </summary>
            <param name="firstName">The user's first name.</param>
            <param name="lastName">The user's last name.</param>
            <param name="email">The user's email.</param>
            <param name="language">The language.</param>
            <param name="country">The country.</param>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the 
            current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current 
            <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService">
            <summary>
            
            </summary>
            <seealso cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.IUserService" />
        </member>
        <member name="P:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.UserProfileDao">
            <summary>
            Sets the user profile DAO.
            </summary>
            <value>
            The user profile DAO.
            </value>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.ChangePassword(System.Int64,System.String,System.String)">
            <summary>
            Changes the password.
            </summary>
            <param name="userProfileId">The user profile id.</param>
            <param name="oldClearPassword">The old clear password.</param>
            <param name="newClearPassword">The new clear password.</param>
            <exception cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.FindUserProfileDetails(System.Int64)">
            <summary>
            Finds the user profile details.
            </summary>
            <param name="userProfileId">The user profile id.</param>
            <returns>
            The user profile details
            </returns>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.Login(System.String,System.String,System.Boolean)">
            <summary>
            Logins the specified login name.
            </summary>
            <param name="loginName">Name of the login.</param>
            <param name="password">The password.</param>
            <param name="passwordIsEncrypted">if set to <c> true </c> [password is encrypted].</param>
            <returns>
            LoginResult
            </returns>
            <exception cref="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Exceptions.IncorrectPasswordException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.RegisterUser(System.String,System.String,Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails)">
            <summary>
            Registers a new user.
            </summary>
            <param name="loginName">Name of the login.</param>
            <param name="clearPassword">The clear password.</param>
            <param name="userProfileDetails">The user profile details.</param>
            <returns></returns>
            <exception cref="T:Es.Udc.DotNet.ModelUtil.Exceptions.DuplicateInstanceException"></exception>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.UpdateUserProfileDetails(System.Int64,Es.Udc.DotNet.PracticaMaD.Model.UserService.UserProfileDetails)">
            <summary>
            Updates the user profile details.
            </summary>
            <param name="userProfileId">The user profile id.</param>
            <param name="userProfileDetails">The user profile details.</param>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.UserService.UserExists(System.String)">
            <summary>
            Checks if the specified loginName corresponds to a valid user.
            </summary>
            <param name="loginName">User loginName.</param>
            <returns>
            Boolean to indicate if the loginName exists
            </returns>
        </member>
        <member name="T:Es.Udc.DotNet.PracticaMaD.Model.UserService.Util.PasswordEncrypter">
            <summary>
            Static Class with cryptografic utilities
            </summary>
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.Util.PasswordEncrypter.Crypt(System.String)">
            <summary>
            Method to encrypt with a SHA 256 Algorithm
            </summary>
            <param name="password">String to encrypt</param>
            <returns>Returns a String with the <paramref name="password"/> encrypted
            </returns>                       
        </member>
        <member name="M:Es.Udc.DotNet.PracticaMaD.Model.UserService.Util.PasswordEncrypter.IsClearPasswordCorrect(System.String,System.String)">
            <summary>
            Determines whether [is clear password correct] [the specified clear password].
            </summary>
            <param name="clearPassword">The clear password.</param>
            <param name="encryptedPassword">The encrypted password.</param>
            <returns>
              <c>true</c> if [is clear password correct] [the specified clear password]; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
